# Assume plots is a list of ggplot plots
combined_plot <- do.call("cowplot::plot_grid", c(plots, ncol = 2, align = "hv", rel_widths = rep(1, length(plots))))
library(cowplot)
# Assume plots is a list of ggplot plots
combined_plot <- do.call("cowplot::plot_grid", c(plots, ncol = 2, align = "hv", rel_widths = rep(1, length(plots))))
cowplot::plot_grid()
cowplot::plot_grid
library(cowplot)
# Assume plots is a list of ggplot plots
combined_plot <- do.call("cowplot::plot_grid", c(plots, ncol = 2, align = "hv", rel_widths = rep(1, length(plots))))
# Assume plots is a list of ggplot plots
grid.arrange(grobs = plots, ncol = 2)
# Assume plots is a list of ggplot plots
grid.arrange(grobs = plots[[1:4]], ncol = 2)
# Assume plots is a list of ggplot plots
grid.arrange(grobs = plots[1:4], ncol = 2)
# Assume plots is a list of ggplot plots
grid.arrange(grobs = plots[1:4], ncol = 2)
grid.arrange(grobs = plots[5:8], ncol = 2)
plots <- lapply(vars_to_plot, function(var) {
group_smooth(df, scan_type, !!var, age_at_scan)
})
grid.arrange(grobs = plots[5:8], ncol = 2)
dim(plots)
length(plots)
grid.arrange(grobs = plots[1:11], ncol = 3)
grid.arrange(grobs = plots[1:5], ncol = 3)
grid.arrange(grobs = plots[6:11], ncol = 3)
grid.arrange(grobs = plots[1:4], ncol = 2)
grid.arrange(grobs = plots[5:8], ncol = 2)
grid.arrange(grobs = plots[9:11], ncol = 2)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(magrittr)
library(table1)
library(ggplot2)
library(rlang)
library(viridis)
library(gridExtra)
library(purrr)
library(cowplot)
library(gamlss) #to fit model
library(mgcv) # helps with the gam models
library(tidymv) # helps with the gam models
#setwd("/Users/ekafadar/Documents/Grad_School/BGDLab/GestationalAge/")
source("/Users/ekafadar/Documents/Grad_School/BGDLab/GestationalAge/R/scripts/data_functions.R")
source("~/Documents/Grad_School/BGDLab/GestationalAge/R/scripts/lib_mpr_analysis_EK.r")
source("~/Documents/Grad_School/BGDLab/GestationalAge/R/scripts/figures.r")
folders <- c("/Users/ekafadar/Documents/Grad_School/BGDLab/SLIP_data/2024-01-19_release/slip_2022/","/Users/ekafadar/Documents/Grad_School/BGDLab/SLIP_data/2024-01-19_release/slip_2023_02/", "/Users/ekafadar/Documents/Grad_School/BGDLab/SLIP_data/2024-01-19_release/slip_2023_03/")
manual_qc_file <- "/Users/ekafadar/Documents/Grad_School/BGDLab/SLIP_data/manual_qc_grades_radiology_paper.csv"
lbcc_ga_file <- "~/Documents/Grad_School/BGDLab/LBCC_data/GA.all.data-24-02.csv"
qc_manual <- load_data(names = "qc", manual_qc_file) %>% bind_rows(.)
qc_manual$full_path <- qc_manual$scan_id
qc_manual$scan_id <- gsub("(?:.*/){10}", "\\1", qc_manual$full_path) %>% sub("\\.nii\\.gz$", "", .)
full_data <- read.csv("/Users/ekafadar/Documents/Grad_School/BGDLab/SLIP_data/SLIP_combined_011923.csv")
full_data$logAge <- log10(full_data$adjusted_age_in_days)
full_data <- full_data %>% mutate(sex = as.factor(sex)) %>% rowwise() %>%
mutate(minQC = min(c_across(contains("qc"))))
full_data$adjusted_age_in_days <- ifelse(!is.na(full_data$gestational_age), (full_data$age_at_scan + (full_data$gestational_age*7)), full_data$age_at_scan + 280)
levels(full_data$sex) <- c("F", "M") #male = 0, female = 1
full_data$scan_type <- ifelse(grepl("MPR", full_data$scan_id), "MPR", ifelse((!grepl("MPR", full_data$scan_id) & grepl("T1w", full_data$scan_id)), "T1w_other", ifelse(grepl("T2w", full_data$scan_id), "T2w", ifelse(grepl("FLAIR", full_data$scan_id), "flair", NA))))
full_data$ageBin <- cut(full_data$age_at_scan, breaks = c(-Inf, 30, 365, 1095, 2190, 4380, Inf), labels = c("Newborn", "Infant", "Toddler", "Preschool", "School_Age", "Adolescent"), include.lowest = TRUE)
#df_MPR <- full_data[grepl("MPR", full_data$scan_id),] %>% distinct(subject_id, .keep_all = T)#947
#df_T1w <- full_data[!grepl("MPR", full_data$scan_id) & grepl("T1w", full_data$scan_id),] %>% distinct(subject_id, .keep_all = T)#1743
#df_T2w <- full_data[grepl("T2w", full_data$scan_id),] %>% distinct(subject_id, .keep_all = T)#1021
#table(grepl("FLAIR",full_data$scan_id))#891
table(full_data$scan_type)
GA_data <- subset(filter(full_data, scan_type == "MPR"), !is.na(gestational_age)) %>% distinct(subject_id, .keep_all = T)#358
GA_data$log_GA <- log10(GA_data$gestational_age)
#Split in GA bins
# Determine the cut points based on quantiles
cut_points <- quantile(GA_data$gestational_age, probs = c(1/3, 2/3)) # cut points are 39 and 40. So this will NOT work.
cut_points <- quantile(GA_data$log_GA, probs = c(1/3, 2/3)) # cut points are 1.59 and 1.6. So this will NOT work.
# Create a new column indicating cut points: specifying by weeks.
GA_data$preterm <- cut(GA_data$gestational_age, breaks = c(-Inf, 31.9, 36.9, Inf), labels = c("VPM", "LPM", "Term"), include.lowest = TRUE)
table(GA_data$preterm)
table(GA_data$sex)
df <- merge(full_data, qc_manual,by = c("scan_id"))
plot(df$age_at_scan, df$rawdata_image_grade)
#convert to wide format
df_wide <- reshape(full_data, idvar = "subject_id", timevar = "scan_type", direction = "wide")
View(df_wide)
? pivot_wider
df_wide <- df %>%
pivot_wider(
id_cols = subject_id,
names_from = scan_type,
values_from = !c(subject_id, scan_type), # Pivot all columns except subject_id and scan_type
values_fill = NA  # Fill missing values with 0
)
df_wide <- full_data %>%
pivot_wider(
id_cols = subject_id,
names_from = scan_type,
values_from = !c(subject_id, scan_type), # Pivot all columns except subject_id and scan_type
values_fill = NA  # Fill missing values with 0
)
View(df_wide)
head(full_data$subject_id)
head(full_data$subject)
#convert to wide format
df_wide <- full_data %>%
reshape(idvar = "subject_id", timevar = "scan_type", direction = "wide")
View(df_wide)
#convert to wide format
# Calculate median values by group
median_df_all <- df %>%
group_by(scan_type) %>%
summarise(across(where(is.numeric), median))
median_df_all <- full_data %>% filter(minQC > 0.65)
group_by(scan_type) %>%
summarise(across(where(is.numeric), median))
median_df_all <- full_data %>% filter(minQC >= 0.65)
group_by(scan_type) %>%
summarise(across(where(is.numeric), median))
median_df_all <- full_data %>% group_by(scan_type) %>% filter(minQC >= 0.65) %>% summarise(across(where(is.numeric), median))
rm(df_wide)
View(median_df_all)
#convert to wide format
# Calculate median values by group
median_df <- full_data %>% filter(minQC >= 0.65) %>%
group_by(subject_id, scan_type) %>%
summarise(median_value = median(value, na.rm = TRUE))
#convert to wide format
# Calculate median values by group
median_df <- full_data %>% filter(minQC >= 0.65) %>%
group_by(subject_id, scan_type) %>%
summarise(across(where(is.numeric), median), na.rm = T)
View(median_df)
median_df <- full_data %>%
group_by(subject_id, scan_type) %>%
summarise(median_value = across(where(is.numeric), median)) %>%
group_by(subject_id) %>%
summarise(median_value = median(median_value, na.rm = TRUE))
vars <- exprs(TCV, Cortex, WMV, sGMV, csf, Ventricles, CerebellumVolume, right.thalamus+left.thalamus, right.hippocampus+left.hippocampus, right.amygdala+left.amygdala,right.putamen+left.putamen)
median_df <- full_data %>%
group_by(subject_id, scan_type) %>%
summarise(median_value = median(vars, na.rm = TRUE)) %>%
group_by(subject_id) %>%
summarise(median_value = median(median_value, na.rm = TRUE))
median_df <- full_data %>%
group_by(subject_id, scan_type) %>%
summarise(median_value = median(vars)) %>%
group_by(subject_id) %>%
summarise(median_value = median(median_value))
median_df <- full_data %>%
group_by(subject_id, scan_type) %>%
summarise(median_value = median('TCV')) %>%
group_by(subject_id) %>%
summarise(median_value = median(median_value))
median_df <- full_data %>%
group_by(subject_id, scan_type) %>%
summarise(median_value = median('TCV'))
View(median_df)
median_df <- full_data %>%
group_by(scan_type, subject_id) %>%
summarise(median_value = median('TCV'))
? reshape
vars <- c("TCV", "Cortex", "WMV", "sGMV", "csf", "Ventricles", "CerebellumVolume")
# Calculate median values by group
wide_df <- full_data %>% reshape(idvar = "subject_id", timevar = "scan_type", v.names = vars, direction = "wide")
View(wide_df)
is.factor(full_data$scan_type)
full_data$scan_type <- as.factor(ifelse(grepl("MPR", full_data$scan_id), "MPR", ifelse((!grepl("MPR", full_data$scan_id) & grepl("T1w", full_data$scan_id)), "T1w_other", ifelse(grepl("T2w", full_data$scan_id), "T2w", ifelse(grepl("FLAIR", full_data$scan_id), "flair", NA)))))
full_data$ageBin <- cut(full_data$age_at_scan, breaks = c(-Inf, 30, 365, 1095, 2190, 4380, Inf), labels = c("Newborn", "Infant", "Toddler", "Preschool", "School_Age", "Adolescent"), include.lowest = TRUE)
#df_MPR <- full_data[grepl("MPR", full_data$scan_id),] %>% distinct(subject_id, .keep_all = T)#947
#df_T1w <- full_data[!grepl("MPR", full_data$scan_id) & grepl("T1w", full_data$scan_id),] %>% distinct(subject_id, .keep_all = T)#1743
#df_T2w <- full_data[grepl("T2w", full_data$scan_id),] %>% distinct(subject_id, .keep_all = T)#1021
#table(grepl("FLAIR",full_data$scan_id))#891
table(full_data$scan_type)
GA_data <- subset(filter(full_data, scan_type == "MPR"), !is.na(gestational_age)) %>% distinct(subject_id, .keep_all = T)#358
GA_data$log_GA <- log10(GA_data$gestational_age)
#Split in GA bins
# Determine the cut points based on quantiles
cut_points <- quantile(GA_data$gestational_age, probs = c(1/3, 2/3)) # cut points are 39 and 40. So this will NOT work.
cut_points <- quantile(GA_data$log_GA, probs = c(1/3, 2/3)) # cut points are 1.59 and 1.6. So this will NOT work.
# Create a new column indicating cut points: specifying by weeks.
GA_data$preterm <- cut(GA_data$gestational_age, breaks = c(-Inf, 31.9, 36.9, Inf), labels = c("VPM", "LPM", "Term"), include.lowest = TRUE)
table(GA_data$preterm)
table(GA_data$sex)
is.factor(full_data$scan_type)
vars <- c("TCV", "Cortex", "WMV", "sGMV", "csf", "Ventricles", "CerebellumVolume")
# Calculate median values by group
wide_df <- full_data %>% reshape(idvar = "subject_id", timevar = "scan_type", v.names = vars, direction = "wide")
View(wide_df)
# Calculate median values by group
wide_df <- full_data %>% reshape(idvar = "subject_id", timevar = "scan_type", direction = "wide")
View(wide_df)
? spread
? pivot_wider
# Calculate median values by group
wide_df <- full_data %>% pivot_wider(names_from = "scan_type")
# Calculate median values by group
wide_df <- full_data %>% pivot_wider(names_from = "scan_type", values_from = vars)
View(wide_df)
paste(vars, c("MPR", "T1w_other", "T2w", "flair", sep = "_")
)
paste(vars, c("MPR", "T1w_other", "T2w", "flair"), sep = "_")
paste(rep(vars, each = length(c("MPR", "T1w_other", "T2w", "flair"))), c("MPR", "T1w_other", "T2w", "flair"), sep = "_")
wide_df <- full_data %>% pivot_wider(names_from = "scan_type", values_from = vars) %>% group_by(subject_id) %>% summarise(across(all_of(paste(rep(vars, each = length(c("MPR", "T1w_other", "T2w", "flair"))), c("MPR", "T1w_other", "T2w", "flair"), sep = "_"), median))
wide_df <- full_data %>% pivot_wider(names_from = "scan_type", values_from = vars) %>% group_by(subject_id) %>% summarise(across(all_of(paste(rep(vars, each = length(c("MPR", "T1w_other", "T2w", "flair"))), c("MPR", "T1w_other", "T2w", "flair"), sep = "_"), median)))
wide_df <- full_data %>% pivot_wider(names_from = "scan_type", values_from = vars) %>% group_by(subject_id) %>% summarise(across(all_of(paste(rep(vars, each = length(c("MPR", "T1w_other", "T2w", "flair"))), c("MPR", "T1w_other", "T2w", "flair"), sep = "_"), median)))
wide_df <- full_data %>% pivot_wider(names_from = "scan_type", values_from = vars) %>% group_by(subject_id) %>% summarise(across(all_of(paste(rep(vars, each = length(c("MPR", "T1w_other", "T2w", "flair"))), c("MPR", "T1w_other", "T2w", "flair"), sep = "_")), median))
View(wide_df)
median_df <- full_data %>% filter(minQC >= 0.65) %>% group_by(subject_id) %>% summarise(across(all_of(vars), median))
View(median_df)
median_df_all <- full_data %>% filter(minQC >= 0.65) %>% group_by(subject_id) %>% summarise(across(all_of(vars), median))
median_df_MPR <- full_data %>% filter(minQC >= 0.65 & scan_type == "MPR") %>% group_by(subject_id) %>% summarise(across(all_of(vars), median))
median_df_nonMPR <- full_data %>% filter(minQC >= 0.65, & scan_type != "MPR") %>% group_by(subject_id) %>% summarise(across(all_of(vars), median))
median_df_nonMPR <- full_data %>% filter(minQC >= 0.65 & scan_type != "MPR") %>% group_by(subject_id) %>% summarise(across(all_of(vars), median))
View(median_df_all)
View(median_df_MPR)
View(median_df_nonMPR)
? distinct
median_df_all <- full_data %>% distinct(subject_id, .keep_all = T) %>% filter(minQC >= 0.65) %>% group_by(subject_id) %>% summarise(across(all_of(vars), median))
median_df_MPR <- full_data %>% distinct(subject_id, .keep_all = T) %>% filter(minQC >= 0.65 & scan_type == "MPR") %>% group_by(subject_id) %>% summarise(across(all_of(vars), median))
median_df_nonMPR <- full_data %>%  distinct(subject_id, .keep_all = T) %>% filter(minQC >= 0.65 & scan_type != "MPR") %>% group_by(subject_id) %>% summarise(across(all_of(vars), median))
# Calculate median values by group
median_df_all <- full_data  %>% filter(minQC >= 0.65) %>% group_by(subject_id) %>% summarise(across(all_of(vars), median))
# Calculate median values by group
median_df_all <- full_data %>% distinct(subject_id, .keep_all = T) %>% filter(minQC >= 0.65) %>% group_by(subject_id) %>% summarise(across(all_of(vars), median))
vars <- c("TCV", "Cortex", "WMV", "sGMV", "csf", "Ventricles", "CerebellumVolume", "age_at_scan", "adjusted_age_in_days")
# Calculate median values by group
median_df_all <- full_data %>% distinct(subject_id, .keep_all = T) %>% filter(minQC >= 0.65) %>% group_by(subject_id) %>% summarise(across(all_of(vars), median))
median_df_MPR <- full_data %>% distinct(subject_id, .keep_all = T) %>% filter(minQC >= 0.65 & scan_type == "MPR") %>% group_by(subject_id) %>% summarise(across(all_of(vars), median))
median_df_nonMPR <- full_data %>%  distinct(subject_id, .keep_all = T) %>% filter(minQC >= 0.65 & scan_type != "MPR") %>% group_by(subject_id) %>% summarise(across(all_of(vars), median))
View(median_df_all)
identical(median_df_all$adjusted_age_in_days, median_df_MPR$adjusted_age_in_days)
sub_ids_shared <- intersect(median_df_all$subject_id, median_df_MPR$subject_id, median_df_nonMPR$subject_id)
sub_ids_shared <- Reduce(intersect. list(median_df_all$subject_id, median_df_MPR$subject_id, median_df_nonMPR$subject_id))
sub_ids_shared <- Reduce(intersect, list(median_df_all$subject_id, median_df_MPR$subject_id, median_df_nonMPR$subject_id))
View(median_df_all)
View(median_df_MPR)
sub_ids_shared <- intersect(median_df_all$subject_id, median_df_MPR$subject_id)
sub_ids_shared <- intersect(sub_ids_shared, median_df_nonMPR$subject_id)
sub_ids_shared <- intersect(median_df_all$subject_id, median_df_nonMPR$subject_id)
sub_ids_shared <- intersect(median_df_MPR$subject_id, median_df_nonMPR$subject_id)
View(median_df_MPR)
View(median_df_nonMPR)
MPR_ids <- full_data %>% filter(minQC >= 0.65) %>% filter(scan_type == "MPR") %>% select(subject_id)
nonMPR_ids <- full_data %>% filter(minQC >= 0.65) %>% filter(scan_type != "MPR") %>% select(subject_id)
shared <- intersect(MPR_ids, nonMPR_ids)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(magrittr)
library(table1)
library(ggplot2)
library(rlang)
library(viridis)
library(gridExtra)
library(purrr)
library(cowplot)
library(gamlss) #to fit model
library(mgcv) # helps with the gam models
library(tidymv) # helps with the gam models
#setwd("/Users/ekafadar/Documents/Grad_School/BGDLab/GestationalAge/")
source("/Users/ekafadar/Documents/Grad_School/BGDLab/GestationalAge/R/scripts/data_functions.R")
source("~/Documents/Grad_School/BGDLab/GestationalAge/R/scripts/lib_mpr_analysis_EK.r")
source("~/Documents/Grad_School/BGDLab/GestationalAge/R/scripts/figures.r")
folders <- c("/Users/ekafadar/Documents/Grad_School/BGDLab/SLIP_data/2024-01-19_release/slip_2022/","/Users/ekafadar/Documents/Grad_School/BGDLab/SLIP_data/2024-01-19_release/slip_2023_02/", "/Users/ekafadar/Documents/Grad_School/BGDLab/SLIP_data/2024-01-19_release/slip_2023_03/")
manual_qc_file <- "/Users/ekafadar/Documents/Grad_School/BGDLab/SLIP_data/manual_qc_grades_radiology_paper.csv"
lbcc_ga_file <- "~/Documents/Grad_School/BGDLab/LBCC_data/GA.all.data-24-02.csv"
qc_manual <- load_data(names = "qc", manual_qc_file) %>% bind_rows(.)
qc_manual$full_path <- qc_manual$scan_id
qc_manual$scan_id <- gsub("(?:.*/){10}", "\\1", qc_manual$full_path) %>% sub("\\.nii\\.gz$", "", .)
full_data <- read.csv("/Users/ekafadar/Documents/Grad_School/BGDLab/SLIP_data/SLIP_combined_011923.csv")
full_data$logAge <- log10(full_data$adjusted_age_in_days)
full_data <- full_data %>% mutate(sex = as.factor(sex)) %>% rowwise() %>%
mutate(minQC = min(c_across(contains("qc"))))
full_data$adjusted_age_in_days <- ifelse(!is.na(full_data$gestational_age), (full_data$age_at_scan + (full_data$gestational_age*7)), full_data$age_at_scan + 280)
levels(full_data$sex) <- c("F", "M") #male = 0, female = 1
full_data$scan_type <- as.factor(ifelse(grepl("MPR", full_data$scan_id), "MPR", ifelse((!grepl("MPR", full_data$scan_id) & grepl("T1w", full_data$scan_id)), "T1w_other", ifelse(grepl("T2w", full_data$scan_id), "T2w", ifelse(grepl("FLAIR", full_data$scan_id), "flair", NA)))))
full_data$ageBin <- cut(full_data$age_at_scan, breaks = c(-Inf, 30, 365, 1095, 2190, 4380, Inf), labels = c("Newborn", "Infant", "Toddler", "Preschool", "School_Age", "Adolescent"), include.lowest = TRUE)
#df_MPR <- full_data[grepl("MPR", full_data$scan_id),] %>% distinct(subject_id, .keep_all = T)#947
#df_T1w <- full_data[!grepl("MPR", full_data$scan_id) & grepl("T1w", full_data$scan_id),] %>% distinct(subject_id, .keep_all = T)#1743
#df_T2w <- full_data[grepl("T2w", full_data$scan_id),] %>% distinct(subject_id, .keep_all = T)#1021
#table(grepl("FLAIR",full_data$scan_id))#891
table(full_data$scan_type)
GA_data <- subset(filter(full_data, scan_type == "MPR"), !is.na(gestational_age)) %>% distinct(subject_id, .keep_all = T)#358
GA_data$log_GA <- log10(GA_data$gestational_age)
#Split in GA bins
# Determine the cut points based on quantiles
cut_points <- quantile(GA_data$gestational_age, probs = c(1/3, 2/3)) # cut points are 39 and 40. So this will NOT work.
cut_points <- quantile(GA_data$log_GA, probs = c(1/3, 2/3)) # cut points are 1.59 and 1.6. So this will NOT work.
# Create a new column indicating cut points: specifying by weeks.
GA_data$preterm <- cut(GA_data$gestational_age, breaks = c(-Inf, 31.9, 36.9, Inf), labels = c("VPM", "LPM", "Term"), include.lowest = TRUE)
table(GA_data$preterm)
table(GA_data$sex)
table(GA_data$scan_type)
table(GA_data$preterm)
names(full_data)
length(distinct(full_data$subject_id))
full_data %>% distinct(subject_id)
df_MPR <- filter(full_data, scan_type == "MPR") %>% distinct(subject_id, .keep_all = T)
GA_data %>% distinct(subject_id)
sum(!is.na(full_data$gestational_age))
all_GA_data <- subset(full_data, !is.na(gestational_age))
all_GA_data <- subset(full_data, !is.na(gestational_age)) %>% distinct(subject_id, .keep_all = T)#358
table(all_GA_data$scan_type)
table(filter(full_data, minQC >= 0.65)$scan_type)
table(filter(full_data, minQC >= 0.65)$scan_type)
table(filter(all_GA_data, minQC >= 0.65)$scan_type)
sum(full_data$minQC >= 0.65)
full_data %>% filter(minQC >= 0.65) %>% distinct(subject_id)
length(full_data %>% filter(minQC >= 0.65) %>% distinct(subject_id))
dim(full_data %>% filter(minQC >= 0.65) %>% distinct(subject_id))
table(filter(all_GA_data, minQC >= 0.65)$scan_type)
dim(all_GA_data %>% filter(minQC >= 0.65) %>% distinct(subject_id))
sum(all_GA_data$minQC >= 0.65)
all_GA_data <- subset(full_data, !is.na(gestational_age))#358
table(filter(all_GA_data, minQC >= 0.65)$scan_type)
dim(all_GA_data %>% filter(minQC >= 0.65) %>% distinct(subject_id))
sum(all_GA_data$minQC >= 0.65)
GA_data <- subset(filter(full_data, scan_type == "MPR"), !is.na(gestational_age)) %>% distinct(subject_id, .keep_all = T)#358
sum(GA_data$minQC >= 0.65)
dim(all_GA_data %>% filter(minQC >= 0.65) %>% distinct(subject_id))
dim(all_GA_data %>% filter(minQC >= 0.65) %>% distinct(subject_id) %>% filter(scan_type == "MPR")
dim(all_GA_data %>% filter(minQC >= 0.65) %>% distinct(subject_id) %>% filter(scan_type == "MPR"))
dim(all_GA_data %>% filter(minQC >= 0.65) %>% distinct(subject_id, .keep_all = T) %>% filter(scan_type == "MPR"))
df <- merge(full_data, qc_manual,by = c("scan_id"))
table(df$scan_type)
df_MPR <- df %>% filter(scan_type == "MPR") %>% distinct(subject_id, .keep_all = T)#273 of them
df <- merge(full_data, qc_manual,by = c("scan_id"))
table(df$scan_type)
df_MPR <- df %>% filter(scan_type == "MPR") %>% distinct(subject_id, .keep_all = T)#273 of the
df <- merge(full_data, qc_manual,by = c("scan_id"))
table(df$scan_type)
df_MPR <- df %>% filter(scan_type == "MPR") %>% distinct(subject_id.x, .keep_all = T)#273 of them
df_MPR <- df %>% filter(scan_type == "MPR")
df_MPR <- df %>% filter(scan_type == "MPR")
df_MPR <- df %>% filter(scan_type == "MPR")
table(df$scan_type)
plot(df$rawdata_image_grade, df$minQC)
? plot
plot(df$rawdata_image_grade, df$minQC, main = "all, n = 472")
plot(df_MPR$rawdata_image_grade, df_MPR$minQC, main = "within MPR, n = 273")
ggplot(df, aes(x=minQC, fill = as.factor(rawdata_image_grade))) + geom_histogram(bins = 20) + scale_x_continuous(breaks = pretty(df$minQC, n = 10)) + theme_minimal() + ggtitle("All data with QC, n = 472")
ggplot(df_MPR, aes(x=minQC, fill = as.factor(rawdata_image_grade))) + geom_histogram(bins = 20) + scale_x_continuous(breaks = pretty(df$minQC, n = 10)) + theme_minimal() + ggtitle("MPR data with QC, n = 273")
cor.test(df_MPR$minQC, df_MPR$rawdata_image_grade)
cor.test(df$minQC, df$rawdata_image_grade)
sum(df_MPR$minQC >= 0.65)#191/273 using SS auto
1095.365
1095/365
plot(df$rawdata_image_grade, df$age_at_scan_days)
plot(df$rawdata_image_grade, df$age_at_scan_days, main =  "all, n = 472")
ga_num <- sum(!is.na(df$gestational_age))
plot(df$rawdata_image_grade, df$gestational_age, main =  paste0("all, n = ", ga_num))
#Look at relationship between age at scan & QC score
plot(full_data$age_at_scan, full_data$minQC, main = "All Scans")
cor.test(full_data$age_at_scan, full_data$minQC)
cor.test(full_data$age_at_scan, full_data$minQC)
table(full_data$ageBin)
table(filter(full_data, scan_type == "MPR")$scan_type)
table(filter(full_data, scan_type == "MPR")$scan_type)
hist(full_data$age_at_scan)
hist(full_data$age_at_scan, xlim = c(0,1000))
hist(full_data$age_at_scan, xlim = c(0,1000), bins = 10)
? hist
df <- full_data %>% filter(scan_type == "MPR")
table(df$age_at_scan)
hist(df$age_at_scan)
df %>% distinct(subject_id, .keep_all = TRUE)
df -> df %>% distinct(subject_id, .keep_all = TRUE)
df <- df %>% distinct(subject_id, .keep_all = TRUE)
hist(df$age_at_scan)
hist(df$age_at_scan, bins = 100)
hist(df$age_at_scan, breaks = 100)
hist(df$age_at_scan, breaks = 100, xlim = (0, 1000))
hist(df$age_at_scan, breaks = 100, xlim = c(0, 1000))
hist(df$age_at_scan, breaks = 100, xlim = c(0, 100))
hist(df$age_at_scan, breaks = 500, xlim = c(0, 100))
hist(df$age_at_scan, breaks = 500, xlim = c(0, 1000))
hist(df$age_at_scan, breaks = 500
)
hist(df$age_at_scan, breaks = 300)
12000/300
plot(df$age_at_scan, df$gestational_age, xlim = c(0,35))
plot(full_data$age_at_scan, full_data$gestational_age, xlim = c(0,35))
sum(df$age_at_scan <= 30)
plot(full_data$age_at_scan, full_data$gestational_age, xlim = c(0,35))
sum(subset(full_data, ageBin == "Infant" & scan_type == "T2w")$minQC > 0,=.65)
sum(subset(full_data, ageBin == "Infant" & scan_type == "T2w")$minQC >= 0.65)
sum(subset(full_data, ageBin == "Infant" & scan_type == "MPR")$minQC >= 0.65)
dim(subset(full_data, ageBin == "Infant" & scan_type == "T2w"))
dim(subset(full_data, ageBin == "Infant" & scan_type == "MPR"))
61/246
32/106
head(subset(full_data, ageBin == "Newborn")$minQC, 20)
mean(subset(full_data, ageBin == "Newborn")$minQC)
median(subset(full_data, ageBin == "Newborn")$minQC)
df_MPR <- full_data %>% group_by(scan_type) %>% distinct(subject_id, .keep_all = T) %>% filter(scan_type == "MPR")
#By scan X age
p_scanAge <- minQC_by_region_dens(df, title = "QC Distribution by Region, Age x Scan") + facet_wrap(~ageBin + scan_type, nrow = 3)
p_scanAge
sum(df$ageBin == "Newborn")
sum(df_MPR$ageBin == "Newborn")
sum(full_data$ageBin == "Newborn")
df <- full_data %>% group_by(scan_type) %>% distinct(subject_id, .keep_all = T)
p_scanAge <- minQC_by_region_dens(df, title = "QC Distribution by Region, Age x Scan") + facet_wrap(~ageBin + scan_type, nrow = 3)
p_scanAge
p_age <- minQC_by_region_dens(df_MPR, title = "QC Distribution by Region, MPR Only") + facet_wrap(~ageBin, nrow = 2)
p_age
newborn_MPR <- subset(df_MPR, ageBin == "Newborn")
View(newborn_MPR)
write.csv(newborn_MPR, file = "/Users/ekafadar/Documents/Grad_School/BGDLab/SLIP_data/newborn_MPR", quote = F, row.names = F)
write.csv(newborn_MPR, file = "/Users/ekafadar/Documents/Grad_School/BGDLab/SLIP_data/newborn_MPR.csv", quote = F, row.names = F)
unique(newborn_MPR$subject_id)
? unique
? distinct
sum(unique(full_data$session_id))
unique(full_data$session_id)
length(unique(full_data$session_id))
length(unique(full_data$subject_id))
#convert to wide format
vars <- c("TCV", "Cortex", "WMV", "sGMV", "csf", "Ventricles", "CerebellumVolume", "age_at_scan", "adjusted_age_in_days", "sex")
# Calculate median values by group
median_df_all <- full_data %>% filter(minQC >= 0.65) %>% group_by(session_id) %>% summarise(across(all_of(vars), median))
#vars for the median dataframe
vars <- c("TCV", "Cortex", "WMV", "sGMV", "csf", "Ventricles", "CerebellumVolume", "age_at_scan", "adjusted_age_in_days")
# Calculate median values by group
median_df_all <- full_data %>% filter(minQC >= 0.65) %>% group_by(session_id) %>% summarise(across(all_of(vars), median))
View(median_df_all)
length(unique(full_data$session_id) %in% full_data[full_data$minQC >= 0.65,"session_id"])
?  match
median_df_all$sex <- full_data[match(full_data$session_id,median_df_all),"sex"]
median_df_all$sex <- full_data[match(full_data$session_id,median_df_all$session_id),"sex"]
match(full_data$session_id,median_df_all$session_id)
unique(match(full_data$session_id,median_df_all$session_id))
? merge
t <- merge(median_df_all, full_data, by = "session_id", all.x = TRUE)
View(t)
#vars for the median dataframe
vars <- c("TCV", "Cortex", "WMV", "sGMV", "csf", "Ventricles", "CerebellumVolume")
# Calculate median values by group
median_df_all <- full_data %>% filter(minQC >= 0.65) %>% group_by(session_id) %>% summarise(across(all_of(vars), median))
t <- merge(median_df_all, select(full_data, c("subject_id", "sex", "age_at_scan", "adjusted_age_in_days", "gestational_age")), by = "session_id", all.x = TRUE)
t <- merge(median_df_all, select(full_data, c("subject_id", "sex", "age_at_scan", "adjusted_age_in_days", "gestational_age", "session_id")), by = "session_id", all.x = TRUE)
View(t)
length(unique(t$session_id))
t <- merge(median_df_all, select(full_data, c("subject_id", "sex", "age_at_scan", "adjusted_age_in_days", "gestational_age", "session_id")), by = "session_id", all.x = TRUE) %>% distinct(subject_id, .keep_all = T)
# Calculate median values by group
median_df_all <- full_data %>% filter(minQC >= 0.65) %>% group_by(session_id) %>% summarise(across(all_of(vars), median)) %>% merge(.,select(full_data, c("subject_id", "sex", "age_at_scan", "adjusted_age_in_days", "gestational_age", "session_id")), by = "session_id", all.x = TRUE) %>% distinct(subject_id, .keep_all = T)
# Calculate median values for each session across only MPRs
median_df_MPR <- full_data %>% filter(minQC >= 0.65 & scan_type == "MPR") %>% group_by(session_id) %>% summarise(across(all_of(vars), median)) %>% merge(.,select(full_data, c("subject_id", "sex", "age_at_scan", "adjusted_age_in_days", "gestational_age", "session_id")), by = "session_id", all.x = TRUE) %>% distinct(subject_id, .keep_all = T)
median_df_nonMPR <- full_data %>% filter(minQC >= 0.65& scan_type != "MPR") %>% group_by(session_id) %>% summarise(across(all_of(vars), median)) %>% merge(.,select(full_data, c("subject_id", "sex", "age_at_scan", "adjusted_age_in_days", "gestational_age", "session_id")), by = "session_id", all.x = TRUE) %>% distinct(subject_id, .keep_all = T)
length(unique(subset(full_data, minQC >= 0.65 & scan_type == "MPR")$subject_id))
length(unique(subset(full_data, minQC >= 0.65 & scan_type != "MPR")$subject_id))
sum(is.na(median_df_all))
View(median_df_all)
median_df_all <- full_data %>% filter(minQC >= 0.65) %>% group_by(session_id) %>% summarise(across(all_of(vars), median)) %>% merge(.,select(full_data, c("subject_id", "sex", "age_at_scan", "adjusted_age_in_days", "gestational_age", "session_id", "logAge")), by = "session_id", all.x = TRUE) %>% distinct(subject_id, .keep_all = T)
# Calculate median values for each session across only MPRs
median_df_MPR <- full_data %>% filter(minQC >= 0.65 & scan_type == "MPR") %>% group_by(session_id) %>% summarise(across(all_of(vars), median)) %>% merge(.,select(full_data, c("subject_id", "sex", "age_at_scan", "adjusted_age_in_days", "gestational_age", "session_id","logAge")), by = "session_id", all.x = TRUE) %>% distinct(subject_id, .keep_all = T)
# Calculate median values for each session across only non-MPRs
median_df_nonMPR <- full_data %>% filter(minQC >= 0.65  & scan_type != "MPR") %>% group_by(session_id) %>% summarise(across(all_of(vars), median)) %>% merge(.,select(full_data, c("subject_id", "sex", "age_at_scan", "adjusted_age_in_days", "gestational_age", "session_id", "logAge")), by = "session_id", all.x = TRUE) %>% distinct(subject_id, .keep_all = T)
#Data split by preterm
#GA_qc_SS_vpm <- GA_qc_SS %>% filter(preterm == "VPM")
#GA_qc_SS_lpm <- GA_qc_SS %>% filter(preterm == "LPM")
df<- median_df_all %>% select(c("sex", "logAge", "TCV")) #293
View(df)
formulaSs <- as.formula(paste0(p, "~fp(logAge, npoly=3) + sex - 1"))
# Build the growth chart modelm - ALL SCANS
p <- "TCV" # specify the phenotype
formulaSs <- as.formula(paste0(p, "~fp(logAge, npoly=3) + sex - 1"))
growthChartModelSs <-gamlss(formula = formulaSs,
sigma.formula = formulaSs,
nu.formula = as.formula(paste0(p, "~1")),
family = GG,
data = df,
control = gamlss.control(n.cyc = 200),  # See (2)
trace = F)
# Predict the median centile of each model
medianCentileSs <- predictCentilesForAgeRange(growthChartModelSs, df$logAge)
source("~/Documents/Grad_School/BGDLab/GestationalAge/R/scripts/lib_mpr_analysis_EK.r")
# Predict the median centile of each model
medianCentileSs <- predictCentilesForAgeRange(growthChartModelSs, df$logAge)
source("~/Documents/Grad_School/BGDLab/GestationalAge/R/scripts/lib_mpr_analysis_EK.r")
# Predict the median centile of each model
medianCentileSs <- predictCentilesForAgeRange(growthChartModelSs, df$logAge)
rm(predictCentilesForAgeRange_GAbins())
rm(predictCentilesForAgeRange_GAbins
)
rm(predictCentilesForAgeRange)
source("~/Documents/Grad_School/BGDLab/GestationalAge/R/scripts/lib_mpr_analysis_EK.r")
# Calculate the age at peak (median) phenotype value
ageAtPeakSs <- 10^(sort(df$logAge)[which.max(medianCentileSs)])
# Predict the median centile of each model
medianCentileSs <- predictCentilesForAgeRange(growthChartModelSs, df$logAge)
# Predict the median centile of each model
medianCentileSs <- predictCentilesForAgeRange(growthChartModelSs, df$logAge)
View(df)
p <- "TCV" # specify the phenotype
df <- median_df_all %>% select(c("sex", "logAge", "TCV")) #293
df <- df[order(df$logAge),]
# Build the growth chart modelm - ALL SCANS
p <- "TCV" # specify the phenotype
df <- median_df_all %>% select(c("sex", "logAge", p)) #293
df <- df[order(df$logAge),]
formulaSs <- as.formula(paste0(p, "~fp(logAge, npoly=3) + sex - 1"))
growthChartModelSs <-gamlss(formula = formulaSs,
sigma.formula = formulaSs,
nu.formula = as.formula(paste0(p, "~1")),
family = GG,
data = df,
control = gamlss.control(n.cyc = 200),  # See (2)
trace = F)
# Predict the median centile of each model
medianCentileSs <- predictCentilesForAgeRange(growthChartModelSs, df$logAge)
source("~/Documents/Grad_School/BGDLab/GestationalAge/R/scripts/lib_mpr_analysis_EK.r")
# Predict the median centile of each model
medianCentileSs <- predictCentilesForAgeRange(growthChartModelSs, df$logAge)
# Predict the median centile of each model
medianCentileSs <- predictCentilesForAgeRange(growthChartModelSs, df$logAge)
